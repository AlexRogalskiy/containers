name: Test PR

on:
  pull_request:

defaults:
  run:
    shell: 'bash -Eeuo pipefail -x {0}'

jobs:
  enable-auto-merge:
    name: Auto Merge
    runs-on: ubuntu-latest
    if: github.event.pull_request.user.login == 'eclipse-temurin-bot'
    steps:
    - name: Enable Automerge
      uses: alexwilson/enable-github-automerge-action@1.0.0
      with:
        github-token: "${{ secrets.GITHUB_TOKEN }}"

  generate-jobs:
    name: Generate Jobs
    needs: enable-auto-merge
    runs-on: ubuntu-latest
    if: always()
    outputs:
      strategy: ${{ steps.generate-jobs.outputs.strategy }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - id: generate-jobs
        name: Generate Jobs
        run: |
          export GENERATE_STACKBREW_LIBRARY='./dockerhub_doc_config_update.sh /dev/stdout'
          export GITHUB_REPOSITORY="eclipse-temurin"
          git clone --depth 1 https://github.com/docker-library/bashbrew.git -b master ~/bashbrew
          strategy="$(~/bashbrew/scripts/github-actions/generate.sh)"
          jq . <<<"$strategy" # sanity check / debugging aid
          echo "::set-output name=strategy::$strategy"

  test:
    needs: generate-jobs
    strategy: ${{ fromJson(needs.generate-jobs.outputs.strategy) }}
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Prepare Environment
        run: ${{ matrix.runs.prepare }}
      - name: Pull Dependencies
        run: ${{ matrix.runs.pull }}
      - name: Build ${{ matrix.name }}
        run: ${{ matrix.runs.build }}
      - name: Test ${{ matrix.name }}
        run: ${{ matrix.runs.test }}
      - name: '"docker images"'
        run: ${{ matrix.runs.images }}
